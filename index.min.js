!function(){const e={},t={},o={}.toString,r=function(e){throw new Error(`can't require ${e}: require is not implemented`)},n=e=>t[e]?n(`${e}_${t[e]++}`):(t[e]=1,e),i=new Proxy(e,{set:(e,t,o)=>(t in e&&e[t]===o||("symbol"!=typeof t&&(t=n(t)),e[t]=o),!0)}),c={get exported(){return Object.assign({},e)},get exports(){return i},set exports(e){if("[object Object]"===o.call(e)){const t=Object.keys(e);for(let o=0;o<t.length;++o){const r=t[o];i[r]=e[r]}}let t="default";"function"==typeof e&&(t=e.name||t),i[t]=e}};if("undefined"==typeof exports)try{exports=i}catch(e){globalThis.exports=i}if("undefined"==typeof module)try{module=c}catch(e){globalThis.module=c}if("undefined"==typeof require)try{require=r}catch(e){globalThis.require=r}}();