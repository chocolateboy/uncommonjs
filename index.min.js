!function(){const e={},t={},n={}.toString,o=e=>t[e]?o(`${e}_${t[e]++}`):(t[e]=1,e),r=new Proxy(e,{set(e,t,n){t in e&&e[t]===n||("symbol"!=typeof t&&(t=o(t)),e[t]=n)}}),i={get exported(){return Object.assign({},e)},get exports(){return r},set exports(e){if("[object Object]"===n.call(e)){const t=Object.keys(e);for(let n=0;n<t.length;++n){const o=t[n];r[o]=e[o]}}let t="default";"function"==typeof e&&(t=e.name||t),r[t]=e}};"undefined"==typeof exports&&(exports=r),"undefined"==typeof module&&(module=i),"undefined"==typeof require&&(require=function(e){throw new Error(`can't require ${e}: require is not implemented`)})}();